{
  "name": "nativescript-facebook-login",
  "version": "0.1.1",
  "description": "A NativeScript module providing Facebook login for Android and iOS",
  "main": "facebook-handler.js",
  "nativescript": {
    "platforms": {
      "android": "1.3.0",
      "ios": "1.3.0"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AntonioCuevaUrraco/nativescript-facebook-login.git"
  },
  "keywords": [
    "NativeScript"
  ],
  "author": {
    "name": "Antonio Cueva Urraco",
    "email": "antonio.cueva@smarp.com"
  },
  "license": {
    "type": "",
    "url": "https://github.com/AntonioCuevaUrraco/nativescript-facebook-login/blob/master/LICENSE"
  },
  "bugs": {
    "url": "https://github.com/AntonioCuevaUrraco/nativescript-facebook-login/issues"
  },
  "homepage": "https://github.com/AntonioCuevaUrraco/nativescript-facebook-login",
  "readmeFilename": "README.md",
  "readme": "# nativescript-facebook-login\nA NativeScript module providing Facebook login for Android and iOS.\nThe plugin is using the version 4.7.0 for iOS and the version 4.6.0 for Android \n## Prerequisites\nNativeScript 1.3.0 for Android and iOS since we are using cocoapods and .aar libraries\n## Plugin architecture\n```\n.\n├── app  <----------------run npm install from here\n│   ├── node_modules\n│   │   └── nativescript-facebook-login <-- The install will place the module's code here\n│   │       ├──platforms\n│   │       │  ├──android\n│   │       │  │  └─libs\n│   │       │  │    └─facebook-release.aar <-- This is the SDK for android as a .aar library\n│   │       │  └──ios\n│   │       │     └─Podfile <-- This is the SDK for iOS as a cocoapods dependency \n│   │       ├──facebook-handler.android.js\n│   │       ├──facebook-handler.ios.js \n│   │       ├──LICENSE\n│   │       ├──README\n│   │       └──package.json\n│   ├── package.json <-- The install will register \"nativescript-facebook-login as a dependency here\n│   └── tns_modules\n│       └── ...\n└── \n```\n\n## Installation\ntns plugin add nativescript-facebook-login\n\n### iOS\nFor ios you need to add this to your app.ios to initialize the SDK\n```ts\nvar application = require(\"application\");\n\nclass MyDelegate extends UIResponder implements UIApplicationDelegate {\n  public static ObjCProtocols = [UIApplicationDelegate];\n\n  applicationDidFinishLaunchingWithOptions(application: UIApplication, launchOptions: NSDictionary): boolean {\n   return FBSDKApplicationDelegate.sharedInstance().applicationDidFinishLaunchingWithOptions(application, launchOptions);\n  }\n  \n  applicationOpenURLSourceApplicationAnnotation(application, url, sourceApplication, annotation) {\n    return FBSDKApplicationDelegate.sharedInstance().applicationOpenURLSourceApplicationAnnotation(application, url, sourceApplication, annotation);\n  }\n  \n  applicationDidBecomeActive(application: UIApplication): void {\n      FBSDKAppEvents.activateApp();\n  }\n\n  applicationWillTerminate(application: UIApplication): void {\n    //Do something you want here\n  }\n\n  applicationDidEnterBackground(application: UIApplication): void {\n    //Do something you want here\n  }\n}\n\napplication.ios.delegate = MyDelegate;\napplication.start();\n\n```\n\nAdd to your Info.plist(the one inside platforms/ios/yourApp) the Facebook App ID credentials \n```xml\n<key>CFBundleURLTypes</key>\n<array>\n  <dict>\n    <key>CFBundleURLSchemes</key>\n    <array>\n      <string>fb{your-app-id}</string>\n    </array>\n  </dict>\n</array>\n<key>FacebookAppID</key>\n<string>{your-app-id}</string>\n<key>FacebookDisplayName</key>\n<string>{your-app-name}</string>\n```\n### Android\nAdd to your AndroidManifest.xml (the one inside platforms/android/src/main) the Facebook App ID credentials\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\"/>\napplication android:label=\"@string/app_name\" ...>\n    ...\n    <meta-data android:name=\"com.facebook.sdk.ApplicationId\" android:value=\"@string/facebook_app_id\"/>\n    <activity android:name=\"com.facebook.FacebookActivity\"\n          android:configChanges=\n                 \"keyboard|keyboardHidden|screenLayout|screenSize|orientation\"\n          android:theme=\"@android:style/Theme.Translucent.NoTitleBar\"\n          android:label=\"@string/app_name\" />\n</application>\n```\n### Common to iOS and Android\n\nRequire the plugin whenever you want to use it\n```ts\nvar FacebookLoginHandler = require(\"nativescript-facebook-login\");\n```\nCreate the callbacks to handle the result of the login\n```ts\nvar successCallback = function(result) {\n    \n  //Do something with the result, for example get the AccessToken\n    var token;\n    if (topmost().android){\n      token = result.getAccessToken().getToken();\n       }\n    else if (topmost().ios){\n      token = result.token.tokenString\n    }\n}\nvar cancelCallback = function() {\n    alert(\"Login was cancelled\");\n  }\n  \nvar failCallback = function() {\n    alert(\"Unexpected error: Cannot get access token\");\n  }  \n```\nAnd finally you can start the login process like this\n```ts\n  FacebookLoginHandler.init();\n  FacebookLoginHandler.registerCallback(successCallback, cancelCallback, failCallback);\n  //Ask for the permissions you want to use\n  FacebookLoginHandler.logInWithPublishPermissions([\"publish_actions\"]);\n```\n\n## Frequently asked questions\n\n### Why Xcode is not building my iOS platform?\n\nAfter installing the plugin CocoaPods creates a .xcworkspace file, use this one to open the project in Xcode instead of the .xcodeproj\n",
  "gitHead": "42738953797e9914ba69faa69a7b42df6f4ad978",
  "_id": "nativescript-facebook-login@0.1.1",
  "scripts": {},
  "_shasum": "8b3ead917e8640ad7e9746896705e6b6157b66f6",
  "_from": "nativescript-facebook-login@*"
}
